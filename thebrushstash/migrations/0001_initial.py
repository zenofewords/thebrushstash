# Generated by Django 2.2.6 on 2019-10-13 14:19

from django.db import migrations, models
from django.utils.text import slugify

from thebrushstash.constants import (
    country_name_list,
    initial_credit_card_logos,
    initial_footer_items,
    initial_navigation_items,
    initial_footer_share_links,
)


def get_defaults(data):
    return {
        'name': data.get('name'),
        'ordering': data.get('ordering'),
        'location': data.get('location', ''),
        'external': data.get('external', False),
        'published': data.get('published', False),
    }


def create_footer_items(apps, schema_editor):
    FooterItem = apps.get_model('thebrushstash', 'FooterItem')

    for footer_item in initial_footer_items:
        FooterItem.objects.get_or_create(
            location=footer_item.get('location'),
            defaults=get_defaults(footer_item),
        )


def create_footer_share_links(apps, schema_editor):
    FooterShareLink = apps.get_model('thebrushstash', 'FooterShareLink')

    for footer_share_links in initial_footer_share_links:
        FooterShareLink.objects.get_or_create(
            location=footer_share_links.get('location'),
            defaults=get_defaults(footer_share_links),
        )


def create_navigation_items(apps, schema_editor):
    NavigationItem = apps.get_model('thebrushstash', 'NavigationItem')

    for navigation_item in initial_navigation_items:
        NavigationItem.objects.get_or_create(
            location=navigation_item.get('location'),
            defaults=get_defaults(navigation_item)
        )


def create_credit_card_logos(apps, schema_editor):
    CreditCardLogo = apps.get_model('thebrushstash', 'CreditCardLogo')

    for credit_card_logo in initial_credit_card_logos:
        CreditCardLogo.objects.get_or_create(
            location=credit_card_logo.get('location'),
            defaults={
                **get_defaults(credit_card_logo),  # noqa
                'image': credit_card_logo.get('image'),
            },
        )


def add_countries(apps, schema_editor):
    Country = apps.get_model('thebrushstash', 'Country')

    for country_name in country_name_list:
        country_slug = slugify(country_name)
        Country.objects.get_or_create(slug=country_slug, defaults={
            'name': country_name,
            'slug': country_slug,
        })


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.CharField(max_length=500)),
                ('published', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='CreditCardLogo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to='credit_card_logos')),
                ('published', models.BooleanField(default=False)),
                ('webp_image_url', models.CharField(blank=True, max_length=1000))
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FooterItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FooterShareLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NavigationItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('image', models.ImageField(upload_to='other')),
                ('webp_image_url', models.CharField(blank=True, max_length=1000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(
            code=add_countries,
            reverse_code=migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_footer_share_links,
            reverse_code=migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_footer_items,
            reverse_code=migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_navigation_items,
            reverse_code=migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_credit_card_logos,
            reverse_code=migrations.operations.special.RunPython.noop,
        ),
    ]
