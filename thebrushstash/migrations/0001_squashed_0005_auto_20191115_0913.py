# Generated by Django 2.2.7 on 2019-11-15 10:46

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
from django.utils.text import slugify
import django.db.migrations.operations.special
import django.db.models.deletion

from thebrushstash.constants import (
    country_name_list,
    inital_exchange_rates,
    initial_credit_card_logos,
    initial_footer_items,
    initial_footer_share_links,
    initial_navigation_items,
)
from thebrushstash.utils import get_default_link_data


def create_footer_items(apps, schema_editor):
    FooterItem = apps.get_model('thebrushstash', 'FooterItem')

    for footer_item in initial_footer_items:
        FooterItem.objects.get_or_create(
            location=footer_item.get('location'),
            defaults={**get_default_link_data(footer_item)},  # noqa
        )


def create_footer_share_links(apps, schema_editor):
    FooterShareLink = apps.get_model('thebrushstash', 'FooterShareLink')

    for footer_share_links in initial_footer_share_links:
        FooterShareLink.objects.get_or_create(
            location=footer_share_links.get('location'),
            defaults={**get_default_link_data(footer_share_links)},  # noqa
        )


def create_navigation_items(apps, schema_editor):
    NavigationItem = apps.get_model('thebrushstash', 'NavigationItem')

    for navigation_item in initial_navigation_items:
        NavigationItem.objects.get_or_create(
            location=navigation_item.get('location'),
            defaults={**get_default_link_data(navigation_item)},  # noqa
        )


def create_credit_card_logos(apps, schema_editor):
    CreditCardLogo = apps.get_model('thebrushstash', 'CreditCardLogo')

    for credit_card_logo in initial_credit_card_logos:
        CreditCardLogo.objects.get_or_create(
            location=credit_card_logo.get('location'),
            defaults={**get_default_link_data(credit_card_logo)},  # noqa
        )


def add_countries(apps, schema_editor):
    Country = apps.get_model('thebrushstash', 'Country')

    for country_name in country_name_list:
        country_slug = slugify(country_name)
        Country.objects.get_or_create(slug=country_slug, defaults={
            'name': country_name,
            'slug': country_slug,
        })


def add_inital_exchange_rates(apps, schema_editor):
    ExchangeRate = apps.get_model('thebrushstash', 'ExchangeRate')

    for exchange_rate in inital_exchange_rates:
        ExchangeRate.objects.get_or_create(
            currency_code=exchange_rate.get('currency_code'),
            defaults={
                'currency': exchange_rate.get('currency'),
                'currency_code': exchange_rate.get('currency_code'),
                'state_iso': exchange_rate.get('state_iso'),
                'buying_rate': exchange_rate.get('buying_rate'),
                'middle_rate': exchange_rate.get('middle_rate'),
                'selling_rate': exchange_rate.get('selling_rate'),
                'added_value': exchange_rate.get('added_value'),
            }
        )


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('currency', models.CharField(max_length=10)),
                ('currency_code', models.CharField(max_length=10)),
                ('state_iso', models.CharField(max_length=10)),
                ('buying_rate', models.DecimalField(decimal_places=8, max_digits=10)),
                ('middle_rate', models.DecimalField(decimal_places=8, max_digits=10)),
                ('selling_rate', models.DecimalField(decimal_places=8, max_digits=10)),
                ('added_value', models.DecimalField(decimal_places=2, help_text='The percentage added when converting from HRK', max_digits=5)),
            ],
            options={
                'verbose_name': 'Exchange rate',
                'verbose_name_plural': 'Exchange rates',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=500)),
                ('slug', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='CreditCardLogo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('css_class', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FooterItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('css_class', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FooterShareLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('css_class', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NavigationItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('css_class', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(
            code=add_inital_exchange_rates,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=add_countries,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_footer_share_links,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_footer_items,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_navigation_items,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_credit_card_logos,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
    ]
