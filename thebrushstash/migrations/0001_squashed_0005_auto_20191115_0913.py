# Generated by Django 2.2.7 on 2019-11-15 10:46

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
from django.utils.text import slugify
import django.db.migrations.operations.special
import django.db.models.deletion

from thebrushstash.constants import (
    country_name_list,
    initial_credit_card_logos,
    initial_footer_items,
    initial_navigation_items,
    initial_footer_share_links,
)
from thebrushstash.utils import get_default_link_data


def create_footer_items(apps, schema_editor):
    FooterItem = apps.get_model('thebrushstash', 'FooterItem')

    for footer_item in initial_footer_items:
        FooterItem.objects.get_or_create(
            location=footer_item.get('location'),
            defaults=get_default_link_data(footer_item),
        )


def create_footer_share_links(apps, schema_editor):
    FooterShareLink = apps.get_model('thebrushstash', 'FooterShareLink')

    for footer_share_links in initial_footer_share_links:
        FooterShareLink.objects.get_or_create(
            location=footer_share_links.get('location'),
            css_class=footer_share_links.get('css_class'),
            defaults=get_default_link_data(footer_share_links),
        )


def create_navigation_items(apps, schema_editor):
    NavigationItem = apps.get_model('thebrushstash', 'NavigationItem')

    for navigation_item in initial_navigation_items:
        NavigationItem.objects.get_or_create(
            location=navigation_item.get('location'),
            defaults=get_default_link_data(navigation_item)
        )


def create_credit_card_logos(apps, schema_editor):
    CreditCardLogo = apps.get_model('thebrushstash', 'CreditCardLogo')

    for credit_card_logo in initial_credit_card_logos:
        CreditCardLogo.objects.get_or_create(
            location=credit_card_logo.get('location'),
            defaults={
                **get_default_link_data(credit_card_logo),  # noqa
                'image': credit_card_logo.get('image'),
            },
        )


def add_countries(apps, schema_editor):
    Country = apps.get_model('thebrushstash', 'Country')

    for country_name in country_name_list:
        country_slug = slugify(country_name)
        Country.objects.get_or_create(slug=country_slug, defaults={
            'name': country_name,
            'slug': country_slug,
        })


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=500)),
                ('slug', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='CreditCardLogo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='credit_card_logos')),
                ('srcsets', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreditCardSecureLogo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='credit_card_logos')),
                ('srcsets', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FooterItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FooterShareLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('css_class', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NavigationItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', models.CharField(blank=True, default='', max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0)),
                ('external', models.BooleanField(default=False)),
                ('published', models.BooleanField(default=False)),
                ('css_class', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ('-ordering',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GalleryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=500)),
                ('image', models.ImageField(blank=True, null=True, upload_to='shop/%Y/%m/')),
                ('youtube_video_id', models.CharField(blank=True, max_length=500)),
                ('ordering', models.IntegerField(blank=True, default=0, help_text='If set to 0, items are ordered by creation date')),
                ('srcsets', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'Gallery item',
                'verbose_name_plural': 'Gallery items',
                'ordering': ('-ordering', 'created_at'),
            },
        ),
        migrations.RunPython(
            code=add_countries,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_footer_share_links,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_footer_items,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_navigation_items,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=create_credit_card_logos,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AddField(
            model_name='creditcardlogo',
            name='css_class',
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.RemoveField(
            model_name='creditcardlogo',
            name='image',
        ),
        migrations.RemoveField(
            model_name='creditcardlogo',
            name='srcsets',
        ),
        migrations.RemoveField(
            model_name='creditcardsecurelogo',
            name='image',
        ),
        migrations.RemoveField(
            model_name='creditcardsecurelogo',
            name='srcsets',
        ),
        migrations.AddField(
            model_name='creditcardsecurelogo',
            name='css_class',
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AddField(
            model_name='footeritem',
            name='css_class',
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AlterField(
            model_name='navigationitem',
            name='css_class',
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.AlterField(
            model_name='galleryitem',
            name='content_type',
            field=models.ForeignKey(limit_choices_to=models.Q(models.Q('shop', 'product'), models.Q('shop', 'showcase'), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='galleryitem',
            name='standalone',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='galleryitem',
            name='content_type',
            field=models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'shop'), ('model', 'product')), models.Q(('app_label', 'shop'), ('model', 'showcase')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
    ]
